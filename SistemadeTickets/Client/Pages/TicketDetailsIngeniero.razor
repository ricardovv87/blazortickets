@page "/TicketdetailsIngeniero"
@page "/TicketdetailsIngeniero/{id:int}"

@inject NavigationManager navigation
@inject IservicesTicket servicesticket
@inject IservicesIngeniero ServicesIngeniero
@inject IDialogService DialogService
@inject IservicesTipos servicestipos



@message

@if (ticket == null)
{
    <div class="d-flex align-items-center">
  <strong>Cargando...</strong>
  <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
    </div>
}else
{
    
    <EditForm Model="ticket" OnValidSubmit="Guardar" >

        <div class="card"> 
          <h5 class="card-header">Formulario de Ticket</h5>
          <div class="card-body">
              <div class="container">

                  <div class="row">
                      <div class="col-md-4 mb-3">
                            <MudTextField @bind-Value="ticket.Usuario"Label="Usuario" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                      </div>
                       <div class="col-md-4 mb-3">
                            <MudTextField @bind-Value="ticket.Telefono"Label="Telefono" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                      </div>
                       <div class="col-md-3 mb-3 ">  
                           <MudDatePicker Label="Fecha" Date="ticket.Fecha"></MudDatePicker>
                      
                      </div>
                        <div class="col-md-4 mb-3">
                       <MudSelect T="string" Label="Estado" @bind-Value="ticket.Estado">
                             <MudSelectItem Value="@("Abierto")"/>
                             <MudSelectItem Value="@("En Proceso")"/>
                             <MudSelectItem Value="@("Resuelto")"/>
                             <MudSelectItem Value="@("Cerrado")"/>
                       </MudSelect>


                      </div>
                        <div class="col-md-4 mb-3">
                             <MudSelect T="string" Label="Prioridad" @bind-Value="ticket.prioridad">
                                <MudSelectItem Value="@("Baja")"/>
                                <MudSelectItem Value="@("Media")"/>
                                <MudSelectItem Value="@("Alta")"/>
                                <MudSelectItem Value="@("Urgente")"/>
                             </MudSelect>
                      </div>

                      <div class="col-md-4 mb-3">
                              <MudSelect @bind-Value="@ticket.Categoria" Label="Categoria">
                                   @foreach ( var cat in tipos)
                                     {
                                        <MudSelectItem Value="@cat.Categoria">@cat.Categoria</MudSelectItem>
                                     }
                              </MudSelect>
                      </div>

                        <div class="col-md-5 mb-3">
                          <MudTextField @bind-Value="ticket.Asunto"Label="Asunto" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                      </div>

                      <div class="col-md-4 mb-3">
                              <MudSelect @bind-Value="@ticket.Ingeniero" Label="Asignar Ingeniero">
                                   @foreach ( var item in ingeniero)
                                     {
                                        <MudSelectItem Value="@item.ingeniero">@item.ingeniero</MudSelectItem>
                                     }
                              </MudSelect>

                      </div>
                      <div class="col-md-3">  
                            
                            @if (string.IsNullOrEmpty(ticket.IngenieroMensaje))
                                {    FS = false;
                                <MudCheckBox Label="Solucionado" @bind-Checked="FS"></MudCheckBox>
                                ticket.FechaSolucion = DateTime.MaxValue;

                            }
                            else {
                                FS = true;
                                <MudCheckBox Label="Solucionado?" @bind-Checked="FS"></MudCheckBox>
                                    ticket.FechaSolucion = DateTime.Today;}
                                      

                                
                        
                      </div>

                        <div class="col-md-6 mb-3">
                          <label for="">Mensaje</Label>
                            <MudTextField @bind-Value="ticket.Mensaje"Label="Describa el problema" Variant="Variant.Outlined" Margin="Margin.Dense" Lines="5"></MudTextField>
                      </div>
                      <div class="col-md-6 mb-3">
                          <label for="">Mensaje de Solucion</Label>
                            <MudTextField @bind-Value="ticket.IngenieroMensaje"Label="Solucion del Problema" Variant="Variant.Outlined" Margin="Margin.Dense" Lines="5"></MudTextField>
                      </div>
                     
                      
                  </div>

                  <div class="row">
                      <div class="col-mb-8">

                      </div>
                      <div class="col-md-2">
                          <input type="submit" class="btn btn-success" value="Guardar"/> 
                      </div>
                      <div class="col-md-2">
                          <input type="button" class="btn btn-secundary" value="Cancelar" @onclick="Home"/>
                      </div>
                      <div class="col-md-2">
                        <input type="button" class="btn btn-danger" value="Eliminar" @onclick="Borrar"/>
                      </div>
                     

                  </div>


              </div>
          </div>
        </div>


    </EditForm>

    
    

}




@code {
    public Ticket ticket;
    public string MensajeInge = string.Empty;
    IEnumerable<Ingeniero> ingeniero;
    IEnumerable<Tipos> tipos;
    public bool FS { get; set; }
    public string message { get; set; }


    [Parameter]
    public int id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            tipos = await servicestipos.TiposCat();
            ingeniero = await ServicesIngeniero.GetIngenieros();
            
            if (id == 0)

                ticket = new Ticket() {Fecha = DateTime.Today,IngenieroMensaje = MensajeInge};

            else
                ticket = await servicesticket.GetDetails(id);

        }
        catch (Exception e)
        {
            message = "error encontrado en..."+e.Message;
        }

    }

    private async Task Guardar()
    {
        await servicesticket.SaveTicket(ticket);
        Home();

    }

    private async Task Home()
    {
        navigation.NavigateTo("/tableroIngenieros");
    }

    private void Borrar()
    {
        servicesticket.DeleteTicket(id);
        Home();
    }

    

}
