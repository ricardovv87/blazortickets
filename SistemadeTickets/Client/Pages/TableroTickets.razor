@page "/tablero"
@inject NavigationManager navigation
@inject IservicesTicket servicesticket

<h3>Tablero de Tickets</h3>
@Message

@if (ticket == null)
{
    <div class="d-flex align-items-center">
  <strong>Cargando...</strong>
  <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
    </div>
}else
{
         <button type="button" class="btn btn-primary" @onclick="NuevoUsr">
             Nuevo Ticket
         </button>

        
          <br/> <br/>

                <div class="form-group">
                <input class="form-control" type="text" placeholder="Buscar"
                @bind="Filter"
                @bind:event="oninput">
                </div>
         <br/>
         
         <div class="table-responsive">
              <table class="table">
        <thead>
            <tr>
                <th>Acciones</th>
                <th>Usuario</th>
                <th>Fecha</th>
                <th>Estado</th>
                <th>Sucursal</th>
                <th>Prioridad</th>
                <th>Asunto</th>
                <th>Ingeniero</th>
                <th>Mensaje</th>
               

               
            </tr>
        </thead>
        <tbody>
            @foreach (var solicitud in ticket)
            {
                if (!IsVisible(solicitud))
                    continue;

               <tr>
                   <td><a href="/VistaTicket/@solicitud.Id"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-fill" viewBox="0 0 16 16">
                    <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z"/>
                    <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z"/>
                    </svg></a></td>
                   <td>@solicitud.Usuario</td>
                   <td>@solicitud.Fecha.ToShortDateString()</td>
                   <td>@solicitud.Estado</td>
                   <td>@solicitud.Sucursal</td>
                   <td>@solicitud.prioridad</td>
                   <td>@solicitud.Asunto</td>
                   <td>@solicitud.Ingeniero</td>
                   <td>@solicitud.Mensaje</td>
                   
                   
                  
               </tr>
           }
        </tbody>
    </table>

         </div>   
            

}



@code {
    IEnumerable<Ticket> ticket;
    public string Filter { get; set; }
    public string Message { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            ticket = await servicesticket.Abiertos();
        }
        catch (Exception e)
        {
          Message = "Error encontrado..." + e.Message;
        }
    }

    private async Task NuevoUsr()
    {
        navigation.NavigateTo("/Ticketdetails");
    }

    private async Task NuevoIng()
    {
        navigation.NavigateTo("/TicketdetailsIngeniero");
    }

    public bool IsVisible(Ticket filtro)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if (filtro.Usuario.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        if (filtro.Asunto.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }




}
